This file contains all test cases for the function named matrix_divided

Import matrix_divided function from 2-matrix_divided
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

The following are the test cases for the function:
	>>> matrix_divided([2, 3, 4], 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[2, 3, 4], [4, 5]], 2)
        Traceback (most recent call last):
                ...
        TypeError: Each row of the matrix must have the same size
	>>> matrix_divided([[2, 3, 'H'], [4, 5, 6]], 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[2, 3, 4], [4, 5, 6]], 'H')
        Traceback (most recent call last):
                ...
        TypeError: div must be a number
	>>> matrix_divided([[2, 3, 4], [4, 5, 6]], [2, 4])
        Traceback (most recent call last):
                ...
        TypeError: div must be a number
	>>> matrix_divided([[2, 3, 4], [4, 5, 6]], (2, 4))
        Traceback (most recent call last):
                ...
        TypeError: div must be a number
	>>> matrix_divided([[2, 3, 4], [4, 5, 6]], "string")
        Traceback (most recent call last):
                ...
        TypeError: div must be a number
	>>> matrix_divided([[2, 3, 4], [4, 5, 6]], 0)
        Traceback (most recent call last):
                ...
        ZeroDivisionError: division by zero
	>>> matrix_divided(2, 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided('H', 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(3.4, 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided((2, 3, 4), 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(((1, 2, 3), (4, 5, 6)), 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[2, 4, 8], [10, 12, 14]], 2)
	[[1.0, 2.0, 4.0], [5.0, 6.0, 7.0]]
	>>> matrix_divided([[2, 4, 8], [10, 12, 14]], 3)
        [[0.67, 1.33, 2.67], [3.33, 4.0, 4.67]]
	>>> matrix_divided([[2.3, 4.3, 8.3], [10.3, 12.3, 14.3]], 2)
        [[1.15, 2.15, 4.15], [5.15, 6.15, 7.15]]
	>>> matrix_divided([[2, 4, 8], [10, 12, 14]], 2.3)
        [[0.87, 1.74, 3.48], [4.35, 5.22, 6.09]]
	>>> matrix_divided(None, 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([(2, 3, 4), [5, 6, 7]], 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[2, 4, 8], [ ]], 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[], []], 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
